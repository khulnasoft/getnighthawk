// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: api/client/output.proto

package nighthawk_client

import (
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Counter) Reset() {
	*x = Counter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_client_output_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counter) ProtoMessage() {}

func (x *Counter) ProtoReflect() protoreflect.Message {
	mi := &file_api_client_output_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counter.ProtoReflect.Descriptor instead.
func (*Counter) Descriptor() ([]byte, []int) {
	return file_api_client_output_proto_rawDescGZIP(), []int{0}
}

func (x *Counter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Counter) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Percentile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DurationType:
	//	*Percentile_Duration
	//	*Percentile_RawValue
	DurationType isPercentile_DurationType `protobuf_oneof:"duration_type"`
	Percentile   float64                   `protobuf:"fixed64,2,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Count        uint64                    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Percentile) Reset() {
	*x = Percentile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_client_output_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Percentile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percentile) ProtoMessage() {}

func (x *Percentile) ProtoReflect() protoreflect.Message {
	mi := &file_api_client_output_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percentile.ProtoReflect.Descriptor instead.
func (*Percentile) Descriptor() ([]byte, []int) {
	return file_api_client_output_proto_rawDescGZIP(), []int{1}
}

func (m *Percentile) GetDurationType() isPercentile_DurationType {
	if m != nil {
		return m.DurationType
	}
	return nil
}

func (x *Percentile) GetDuration() *durationpb.Duration {
	if x, ok := x.GetDurationType().(*Percentile_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *Percentile) GetRawValue() float64 {
	if x, ok := x.GetDurationType().(*Percentile_RawValue); ok {
		return x.RawValue
	}
	return 0
}

func (x *Percentile) GetPercentile() float64 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *Percentile) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type isPercentile_DurationType interface {
	isPercentile_DurationType()
}

type Percentile_Duration struct {
	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3,oneof"`
}

type Percentile_RawValue struct {
	RawValue float64 `protobuf:"fixed64,4,opt,name=raw_value,json=rawValue,proto3,oneof"`
}

func (*Percentile_Duration) isPercentile_DurationType() {}

func (*Percentile_RawValue) isPercentile_DurationType() {}

type Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to MeanType:
	//	*Statistic_Mean
	//	*Statistic_RawMean
	MeanType isStatistic_MeanType `protobuf_oneof:"mean_type"`
	// Types that are assignable to PstdevType:
	//	*Statistic_Pstdev
	//	*Statistic_RawPstdev
	PstdevType  isStatistic_PstdevType `protobuf_oneof:"pstdev_type"`
	Percentiles []*Percentile          `protobuf:"bytes,5,rep,name=percentiles,proto3" json:"percentiles,omitempty"`
	// Types that are assignable to MinType:
	//	*Statistic_Min
	//	*Statistic_RawMin
	MinType isStatistic_MinType `protobuf_oneof:"min_type"`
	// Types that are assignable to MaxType:
	//	*Statistic_Max
	//	*Statistic_RawMax
	MaxType isStatistic_MaxType `protobuf_oneof:"max_type"`
}

func (x *Statistic) Reset() {
	*x = Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_client_output_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistic) ProtoMessage() {}

func (x *Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_api_client_output_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistic.ProtoReflect.Descriptor instead.
func (*Statistic) Descriptor() ([]byte, []int) {
	return file_api_client_output_proto_rawDescGZIP(), []int{2}
}

func (x *Statistic) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Statistic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Statistic) GetMeanType() isStatistic_MeanType {
	if m != nil {
		return m.MeanType
	}
	return nil
}

func (x *Statistic) GetMean() *durationpb.Duration {
	if x, ok := x.GetMeanType().(*Statistic_Mean); ok {
		return x.Mean
	}
	return nil
}

func (x *Statistic) GetRawMean() float64 {
	if x, ok := x.GetMeanType().(*Statistic_RawMean); ok {
		return x.RawMean
	}
	return 0
}

func (m *Statistic) GetPstdevType() isStatistic_PstdevType {
	if m != nil {
		return m.PstdevType
	}
	return nil
}

func (x *Statistic) GetPstdev() *durationpb.Duration {
	if x, ok := x.GetPstdevType().(*Statistic_Pstdev); ok {
		return x.Pstdev
	}
	return nil
}

func (x *Statistic) GetRawPstdev() float64 {
	if x, ok := x.GetPstdevType().(*Statistic_RawPstdev); ok {
		return x.RawPstdev
	}
	return 0
}

func (x *Statistic) GetPercentiles() []*Percentile {
	if x != nil {
		return x.Percentiles
	}
	return nil
}

func (m *Statistic) GetMinType() isStatistic_MinType {
	if m != nil {
		return m.MinType
	}
	return nil
}

func (x *Statistic) GetMin() *durationpb.Duration {
	if x, ok := x.GetMinType().(*Statistic_Min); ok {
		return x.Min
	}
	return nil
}

func (x *Statistic) GetRawMin() uint64 {
	if x, ok := x.GetMinType().(*Statistic_RawMin); ok {
		return x.RawMin
	}
	return 0
}

func (m *Statistic) GetMaxType() isStatistic_MaxType {
	if m != nil {
		return m.MaxType
	}
	return nil
}

func (x *Statistic) GetMax() *durationpb.Duration {
	if x, ok := x.GetMaxType().(*Statistic_Max); ok {
		return x.Max
	}
	return nil
}

func (x *Statistic) GetRawMax() uint64 {
	if x, ok := x.GetMaxType().(*Statistic_RawMax); ok {
		return x.RawMax
	}
	return 0
}

type isStatistic_MeanType interface {
	isStatistic_MeanType()
}

type Statistic_Mean struct {
	Mean *durationpb.Duration `protobuf:"bytes,3,opt,name=mean,proto3,oneof"`
}

type Statistic_RawMean struct {
	RawMean float64 `protobuf:"fixed64,8,opt,name=raw_mean,json=rawMean,proto3,oneof"`
}

func (*Statistic_Mean) isStatistic_MeanType() {}

func (*Statistic_RawMean) isStatistic_MeanType() {}

type isStatistic_PstdevType interface {
	isStatistic_PstdevType()
}

type Statistic_Pstdev struct {
	Pstdev *durationpb.Duration `protobuf:"bytes,4,opt,name=pstdev,proto3,oneof"`
}

type Statistic_RawPstdev struct {
	RawPstdev float64 `protobuf:"fixed64,10,opt,name=raw_pstdev,json=rawPstdev,proto3,oneof"`
}

func (*Statistic_Pstdev) isStatistic_PstdevType() {}

func (*Statistic_RawPstdev) isStatistic_PstdevType() {}

type isStatistic_MinType interface {
	isStatistic_MinType()
}

type Statistic_Min struct {
	Min *durationpb.Duration `protobuf:"bytes,6,opt,name=min,proto3,oneof"`
}

type Statistic_RawMin struct {
	RawMin uint64 `protobuf:"varint,12,opt,name=raw_min,json=rawMin,proto3,oneof"`
}

func (*Statistic_Min) isStatistic_MinType() {}

func (*Statistic_RawMin) isStatistic_MinType() {}

type isStatistic_MaxType interface {
	isStatistic_MaxType()
}

type Statistic_Max struct {
	Max *durationpb.Duration `protobuf:"bytes,7,opt,name=max,proto3,oneof"`
}

type Statistic_RawMax struct {
	RawMax uint64 `protobuf:"varint,13,opt,name=raw_max,json=rawMax,proto3,oneof"`
}

func (*Statistic_Max) isStatistic_MaxType() {}

func (*Statistic_RawMax) isStatistic_MaxType() {}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Statistics        []*Statistic           `protobuf:"bytes,2,rep,name=statistics,proto3" json:"statistics,omitempty"`
	Counters          []*Counter             `protobuf:"bytes,3,rep,name=counters,proto3" json:"counters,omitempty"`
	ExecutionDuration *durationpb.Duration   `protobuf:"bytes,4,opt,name=execution_duration,json=executionDuration,proto3" json:"execution_duration,omitempty"`
	ExecutionStart    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=execution_start,json=executionStart,proto3" json:"execution_start,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_client_output_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_api_client_output_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_api_client_output_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Result) GetStatistics() []*Statistic {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *Result) GetCounters() []*Counter {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *Result) GetExecutionDuration() *durationpb.Duration {
	if x != nil {
		return x.ExecutionDuration
	}
	return nil
}

func (x *Result) GetExecutionStart() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutionStart
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Options   *CommandLineOptions    `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Results   []*Result              `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Version   *v3.BuildVersion       `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_client_output_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_api_client_output_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_api_client_output_proto_rawDescGZIP(), []int{4}
}

func (x *Output) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Output) GetOptions() *CommandLineOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Output) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Output) GetVersion() *v3.BuildVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

var File_api_client_output_proto protoreflect.FileDescriptor

var file_api_client_output_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x68, 0x61, 0x77, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x77, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12,
	0x1b, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x61, 0x6e, 0x12, 0x33, 0x0a, 0x06,
	0x70, 0x73, 0x74, 0x64, 0x65, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x06, 0x70, 0x73, 0x74, 0x64, 0x65,
	0x76, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x73, 0x74, 0x64, 0x65, 0x76, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x09, 0x72, 0x61, 0x77, 0x50, 0x73, 0x74, 0x64,
	0x65, 0x76, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x68,
	0x61, 0x77, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x02, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x19, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x02, 0x52, 0x06, 0x72, 0x61, 0x77, 0x4d, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x03,
	0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x19, 0x0a, 0x07, 0x72,
	0x61, 0x77, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x06,
	0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x70, 0x73, 0x74, 0x64, 0x65, 0x76, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x68, 0x61, 0x77, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x68, 0x61, 0x77, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a,
	0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0xf4, 0x01, 0x0a,
	0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x68, 0x61, 0x77, 0x6b, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x68, 0x61, 0x77, 0x6b, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_client_output_proto_rawDescOnce sync.Once
	file_api_client_output_proto_rawDescData = file_api_client_output_proto_rawDesc
)

func file_api_client_output_proto_rawDescGZIP() []byte {
	file_api_client_output_proto_rawDescOnce.Do(func() {
		file_api_client_output_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_client_output_proto_rawDescData)
	})
	return file_api_client_output_proto_rawDescData
}

var file_api_client_output_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_client_output_proto_goTypes = []interface{}{
	(*Counter)(nil),               // 0: nighthawk.client.Counter
	(*Percentile)(nil),            // 1: nighthawk.client.Percentile
	(*Statistic)(nil),             // 2: nighthawk.client.Statistic
	(*Result)(nil),                // 3: nighthawk.client.Result
	(*Output)(nil),                // 4: nighthawk.client.Output
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*CommandLineOptions)(nil),    // 7: nighthawk.client.CommandLineOptions
	(*v3.BuildVersion)(nil),       // 8: envoy.config.core.v3.BuildVersion
}
var file_api_client_output_proto_depIdxs = []int32{
	5,  // 0: nighthawk.client.Percentile.duration:type_name -> google.protobuf.Duration
	5,  // 1: nighthawk.client.Statistic.mean:type_name -> google.protobuf.Duration
	5,  // 2: nighthawk.client.Statistic.pstdev:type_name -> google.protobuf.Duration
	1,  // 3: nighthawk.client.Statistic.percentiles:type_name -> nighthawk.client.Percentile
	5,  // 4: nighthawk.client.Statistic.min:type_name -> google.protobuf.Duration
	5,  // 5: nighthawk.client.Statistic.max:type_name -> google.protobuf.Duration
	2,  // 6: nighthawk.client.Result.statistics:type_name -> nighthawk.client.Statistic
	0,  // 7: nighthawk.client.Result.counters:type_name -> nighthawk.client.Counter
	5,  // 8: nighthawk.client.Result.execution_duration:type_name -> google.protobuf.Duration
	6,  // 9: nighthawk.client.Result.execution_start:type_name -> google.protobuf.Timestamp
	6,  // 10: nighthawk.client.Output.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 11: nighthawk.client.Output.options:type_name -> nighthawk.client.CommandLineOptions
	3,  // 12: nighthawk.client.Output.results:type_name -> nighthawk.client.Result
	8,  // 13: nighthawk.client.Output.version:type_name -> envoy.config.core.v3.BuildVersion
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_client_output_proto_init() }
func file_api_client_output_proto_init() {
	if File_api_client_output_proto != nil {
		return
	}
	// TODO:
	//file_envoy_config_core_v3_base_proto_init()
	file_api_client_options_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_client_output_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Counter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_client_output_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Percentile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_client_output_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_client_output_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_client_output_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_client_output_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Percentile_Duration)(nil),
		(*Percentile_RawValue)(nil),
	}
	file_api_client_output_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Statistic_Mean)(nil),
		(*Statistic_RawMean)(nil),
		(*Statistic_Pstdev)(nil),
		(*Statistic_RawPstdev)(nil),
		(*Statistic_Min)(nil),
		(*Statistic_RawMin)(nil),
		(*Statistic_Max)(nil),
		(*Statistic_RawMax)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_client_output_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_client_output_proto_goTypes,
		DependencyIndexes: file_api_client_output_proto_depIdxs,
		MessageInfos:      file_api_client_output_proto_msgTypes,
	}.Build()
	File_api_client_output_proto = out.File
	file_api_client_output_proto_rawDesc = nil
	file_api_client_output_proto_goTypes = nil
	file_api_client_output_proto_depIdxs = nil
}
